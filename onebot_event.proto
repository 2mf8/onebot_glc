syntax = "proto3";
package onebot;
import "onebot_base.proto";
option go_package="./onebot";

message PrivateMessageEvent{
    int64 time = 1;
    int64 self_id = 2;
    string post_type = 3;
    string message_type = 4;
    string sub_type = 5;
    int32 message_id = 6;
    int64 user_id = 7;
    repeated Message message = 8;
    string raw_message = 9;
    int32 font = 10;
    Sender sender = 11;
    message Sender{
        int64 user_id = 1;
        string nickname = 2;
        string sex = 3;
        int32 age = 4;
    }
    map<string, string> extra = 255;
}

message GroupMessageEvent{
    int64 time = 1;
    int64 self_id = 2;
    string post_type = 3;
    string message_type = 4;
    string sub_type = 5;
    int32 message_id = 6;
    int64 group_id = 7;
    int64 user_id = 8;
    Anonymous anonymous = 9;
    repeated Message message = 10;
    string raw_message = 11;
    int32 font = 12;
    Sender sender = 13;
    message Anonymous{
        int64 id = 1;
        string name = 2;
        string flag = 3;
    }
    message Sender{
        int64 user_id = 1;
        string nickname = 2;
        string card = 3;
        string sex = 4;
        int32 age = 5;
        string area = 6;
        string level = 7;
        string role = 8;
        string title = 9;
    }
    map<string, string> extra = 255;
}

message GroupTempMessageEvent{
    int64 time = 1;
    int64 self_id = 2;
    string post_type = 3;
    string message_type = 4;
    int64 group_id = 7;
    int64 user_id = 8;
    repeated Message message = 10;
    string raw_message = 11;
    int32 message_id = 15;
    map<string, string> extra = 255;
}

message GroupUploadNoticeEvent{
    int64 time = 1;
    int64 self_id = 2;
    string post_type = 3;
    string notice_type = 4;
    int64 group_id = 5;
    int64 user_id = 6;
    File file = 7;
    message File{
        string id = 1;
        string name = 2;
        int64 size = 3;
        int64 busid = 4;
        string url = 5;
    }
    map<string, string> extra = 255;
}

message GroupNotifyEvent{
    int64 time = 1;
    int64 self_id = 2;
    string post_type = 3;
    string notice_type = 4;
    int64 group_id = 5;
    string group_name = 6;
    int64 sender = 7;
    string sender_card = 8;
    int64 target_id = 9;
    string target_card = 10;
    string honor = 11;
}

message GroupAdminNoticeEvent{
    int64 time = 1;
    int64 self_id = 2;
    string post_type = 3;
    string notice_type = 4;
    string sub_type = 5;
    int64 group_id = 6;
    int64 user_id = 7;
    map<string, string> extra = 255;
}

message GroupDecreaseNoticeEvent{
    int64 time = 1;
    int64 self_id = 2;
    string post_type = 3;
    string notice_type = 4;
    string sub_type = 5;
    int64 group_id = 6;
    int64 operator_id = 7;
    int64 user_id = 8;
    string member_uid = 9;
    string operator_uid = 10;
    uint32 exit_type = 11;
    map<string, string> extra = 255;
}

message GroupIncreaseNoticeEvent{
    int64 time = 1;
    int64 self_id = 2;
    string post_type = 3;
    string notice_type = 4;
    string sub_type = 5;
    int64 group_id = 6;
    int64 operator_id = 7;
    int64 user_id = 8;
    string member_uid = 9;
    string invitor_uid = 10;
    uint32 join_type = 11;
    map<string, string> extra = 255;
}

message GroupBanNoticeEvent{
    int64 time = 1;
    int64 self_id = 2;
    string post_type = 3;
    string notice_type = 4;
    string sub_type = 5;
    int64 group_id = 6;
    int64 operator_id = 7;
    int64 user_id = 8;
    int64 duration = 9;
    string operator_uid = 10;
    string target_uid = 11;
    map<string, string> extra = 255;
}

message FriendAddNoticeEvent{
    int64 time = 1;
    int64 self_id = 2;
    string post_type = 3;
    string notice_type = 4;
    int64 user_id = 5;
    uint32 source_uin = 8;
    string source_uid = 9;
    string msg = 10;
    string source = 11;
    map<string, string> extra = 255;
}

message GroupRecallNoticeEvent{
    int64 time = 1;
    int64 self_id = 2;
    string post_type = 3;
    string notice_type = 4;
    int64 group_id = 5;
    int64 user_id = 6;
    int64 operator_id = 7;
    int32 message_id = 8;
    string author_uid = 10;
    string operator_uid = 11;
    uint64 sequence = 12;
    uint32 random = 13;
    map<string, string> extra = 255;
}

message FriendRecallNoticeEvent{
    int64 time = 1;
    int64 self_id = 2;
    string post_type = 3;
    string notice_type = 4;
    int64 user_id = 5;
    int32 message_id = 6;
    string from_uid = 8;
    uint64 sequence = 9;
    uint32 random = 10;
    map<string, string> extra = 255;
}

message FriendRequestEvent{
    int64 time = 1;
    int64 self_id = 2;
    string post_type = 3;
    string request_type = 4;
    int64 user_id = 5;
    string comment = 6;
    string flag = 7;
    uint32 source_uin = 8;
    string source_uid = 9;
    string msg = 10;
    string source = 11;
    map<string, string> extra = 255;
}

message GroupRequestEvent{
    int64 time = 1;
    int64 self_id = 2;
    string post_type = 3;
    string request_type = 4;
    string sub_type = 5;
    int64 group_id = 6;
    int64 user_id = 7;
    string comment = 8;
    string flag = 9;
    int64 request_id = 10;
    string user_nick = 11;
    string group_name = 12;
    string action_uin_nick = 13;
    int64 action_uin = 14;
    bool check = 15;
    bool suspicious = 16;
    string target_uid = 17;
    string invitor_uid = 18;
    string answer = 19;
    map<string, string> extra = 255;
}

message GroupDigestEvent{
    int64 time = 1;
    int64 self_id = 2;
    string post_type = 3;
    string notice_type = 4;
    string sub_type = 5;
    uint32 group_uin = 6;   // GroupUin          uint32
    uint32 message_id = 7;  // MessageID         uint32
    uint32 internal_message_id = 8; // InternalMessageID uint32
    uint32 operation_type = 9;  // OperationType     uint32 // 1 -> 设置精华消息, 2 -> 移除精华消息
    uint32 operation_time = 10;  // OperateTime       uint32
    uint32 sender_uin = 11;  // SenderUin         uint32
    uint32 operator_uin = 12; // OperatorUin       uint32
    string sender_nick = 13; // SenderNick        string
    string operation_nick = 14;  // OperatorNick      string
    map<string, string> extra = 255;
}

message GroupMemberPermissionChangedEvent{
    int64 time = 1;
    int64 self_id = 2;
    string post_type = 3;
    string notice_type = 4;
    string sub_type = 5;
    GroupMessageEvent group_event = 6;
    uint32 target_uin = 7;  //  TargetUin uint32
    string target_uid = 8;  //  TargetUid string
    bool is_admin = 9;  //  IsAdmin   bool
    map<string, string> extra = 255;
}

message GroupNameUpdatedEvent {
    int64 time = 1;
    int64 self_id = 2;
    string post_type = 3;
    string notice_type = 4;
    string sub_type = 5;
    uint32 group_uin = 6;   //  GroupUin    uint32
    string new_name = 7;    //  NewName     string
    uint32 operator_uin = 8;    //  OperatorUin uint32
    string operator_uid = 9;    //  OperatorUid string
    map<string, string> extra = 255;
}

message MemberSpecialTitleUpdatedEvent {
    int64 time = 1;
    int64 self_id = 2;
    string post_type = 3;
    string notice_type = 4;
    string sub_type = 5;
    uint32 group_uin = 6;   //  GroupUin uint32
    uint32 uin = 7;    //  Uin      uint32
    string new_title = 8;   //  NewTitle string
    map<string, string> extra = 255;
}

message RenameEvent {
    int64 time = 1;
    int64 self_id = 2;
    string post_type = 3;
    string notice_type = 4;
    string sub_type = 5;
    uint32 uin = 6; //  Uin      uint32
    string uid = 7;//  Uid      string
    string nick_name = 8;   //  Nickname string
    map<string, string> extra = 255;
}